name: Backend CD


on:
  push:
    branches:
      - main
    paths:
      - Backend/**
  workflow_dispatch:



permissions:
  contents: read
  id-token: write



jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install pipenv
        run: pip install pipenv

      - name: Run Lint
        run: |
          cd Backend
          pipenv install --dev
          pipenv run lint


  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install pipenv
        run: pip install pipenv

      - name: Run Test
        run: |
          cd Backend
          pipenv install
          pipenv run test


  Build:
    runs-on: ubuntu-latest
    needs: [ Lint, Test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Backend
        run: |
          cd Backend
          docker build --tag mp-backend:${{ github.sha }} .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push image to ECR
        run: |
          docker tag mp-backend:${{ github.sha }} ${{ vars.BACKEND_ECR_REPO }}:${{ github.sha }}
          docker push ${{ vars.BACKEND_ECR_REPO }}:${{ github.sha }}


  Deploy:
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Deploy to k8s
        run: |
          cd Backend/k8s
          aws eks update-kubeconfig --name cluster
          kustomize edit set image backend=${{ vars.BACKEND_ECR_REPO }}:${{ github.sha }}
          kustomize build | kubectl apply -f -

