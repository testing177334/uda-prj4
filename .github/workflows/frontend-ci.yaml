name: Frontend CI


on:
  pull_request:
    branches:
      - main
    paths:
      - Frontend/**
  workflow_dispatch:



permissions:
  contents: read
  id-token: write



jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: Frontend/node_modules
          key: node_modules-${{ hashFiles('Frontend/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install deps
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          cd Frontend
          npm ci

      - name: Run Lint
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          cd Frontend
          npm run lint


  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: Frontend/node_modules
          key: node_modules-${{ hashFiles('Frontend/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install deps
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          cd Frontend
          nvm install
          nvm use
          npm ci

      - name: Run Test
        run: |
          export NVM_DIR=~/.nvm
          source ~/.nvm/nvm.sh
          cd Frontend
          nvm install
          nvm use
          CI=true npm test


  Build:
    runs-on: ubuntu-latest
    needs: [ Lint, Test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Frontend
        run: |
          cd Frontend
          npm ci
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:${{ github.sha }} .

